from app.class_project import Project

"""create table
  public.projects (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    updated_at timestamp with time zone null default now(),
    name text null,
    description text null,
    hashtags text[] null,
    n_likes bigint null,
    liked_by text[] null,
    author_email text null,
    public boolean false,
    constraint projects_pkey primary key (id)
  ) tablespace pg_default;"""

"""create table
  public.users (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    uuid uuid null default gen_random_uuid (),
    email text null,
    platform_id text null,
    liked_projects bigint[] null,
    constraint users_pkey primary key (id)
  ) tablespace pg_default;"""


def get_projects(hashtags: list[str] or None):
    if hashtags:
        get_projects_with_hashtags(hashtags)
    else:
        get_all_projects()


def get_projects_with_hashtags(hashtags: list[str]):
    pass


def get_all_projects():
    pass


def like_project(email: str, project_id: int):
    pass


def dislike_project(email: str, project_id: int):
    pass


def is_user_in_database(email: str):
    pass


def authentication(email: str, platform_id: str):
    if not is_user_in_database(email):
        sign_up(email, platform_id)


def sign_up(email: str, platform_id: str):
    pass


def create_project(email: str, new_project: Project):
    pass


def update_project(email: str, project_id: int, new_project: Project):
    pass


def delete_project(email: str, project_id: int):
    pass






